#!/bin/bash

function help {

	echo -e "\n"
	echo -e "\t\033[34;1mbackup.sh \e[0m : does a backup between a Veracrypt container and an encrypted partition.
	\e[1mOPTIONS\e[0m :
	-h : \tasks for help.
	-f : \tFROM, can either be 'C' for container or 'P' for partition.
	-t : \tTO, can either be 'C' for container or 'P' for partition.
	-p : \tpartition path. CANNOT BE NULL
	-c : \tcontainer path. CANNOT BE NULL."
	echo -e "\n"
}

#Realise the backup $1=partitionPath $2=containerPath
function backup {

	#Check if partitionPath and containerPath exist, if not, exit.
	if [[ ! -e "$1" ]]
	then
		logger -t backup "Partition path does not exist."
		exit 1
	fi
	if [[ ! -e "$2" ]]
	then
		logger -t backup "Container path does not exist."
		exit 1
	fi

	#Create directories in /tmp
	tmpFolder=$(mktemp -d)
	#Folder for partition
	sudo mkdir $tmpFolder/backupP
	#Folder for container
	sudo mkdir $tmpFolder/backupC

	#Mount the partition and container in /tmp
	sudo cryptsetup luksOpen $1 crypt
	sudo mount /dev/mapper/crypt $tmpFolder/backupP
	sudo veracrypt -v $2 $tmpFolder/backupC

	#Backup
	if [[ "$backupWay" = "1" ]] 
	then
		sudo rsync -va $tmpFolder/backupP/* $tmpFolder/backupC
	elif [[ "$backupWay" = "2" ]]
	then
		sudo rsync -va $tmpFolder/backupC/* $tmpFolder/backupP
	fi

	#Unmount partition and container
	sudo umount /dev/mapper/crypt
	sudo cryptsetup luksClose crypt
	sudo veracrypt -d

	#Remove tmp folder
	sudo rm -r $tmpFolder

}


while getopts ":hf:t:p:c:" option
do 
	case ${option} in
		h)
			help
			exit 0
		;;
		f)
			FROM=$OPTARG
		;;
		t)
			TO=$OPTARG
		;;
		p)
			partitionPath=$OPTARG
		;;
		c)
			containerPath=$OPTARG
		;;
		\?)
			echo "I don't know what to do with [$OPTARG]. Please, ask for help."
			exit 1
		;;
	esac
done

#Choose the way of backup (from partition to container or the other way around)
if [[ "$FROM" == "P" && "$TO" == "C" ]]
then
	backupWay="1"
elif [[ "$FROM" == "C" && "$TO" == "P" ]]
then
	backupWay="2"
else
	echo "Wrong syntax. You cannot use this combination (FROM='$FROM', TO='$TO')."
	exit 1
fi
#Do the backup
backup $partitionPath $containerPath
